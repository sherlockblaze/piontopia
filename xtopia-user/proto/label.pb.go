// Code generated by protoc-gen-go. DO NOT EDIT.
// source: label.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LabelKind int32

const (
	LabelKind_OWN    LabelKind = 0
	LabelKind_OTHERS LabelKind = 1
)

var LabelKind_name = map[int32]string{
	0: "OWN",
	1: "OTHERS",
}

var LabelKind_value = map[string]int32{
	"OWN":    0,
	"OTHERS": 1,
}

func (x LabelKind) String() string {
	return proto.EnumName(LabelKind_name, int32(x))
}

func (LabelKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6100d2b5ae808f16, []int{0}
}

type LabelLevel int32

const (
	LabelLevel_USER LabelLevel = 0
	LabelLevel_TEAM LabelLevel = 1
)

var LabelLevel_name = map[int32]string{
	0: "USER",
	1: "TEAM",
}

var LabelLevel_value = map[string]int32{
	"USER": 0,
	"TEAM": 1,
}

func (x LabelLevel) String() string {
	return proto.EnumName(LabelLevel_name, int32(x))
}

func (LabelLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6100d2b5ae808f16, []int{1}
}

type Labels struct {
	ID                   string     `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Kind                 LabelKind  `protobuf:"varint,2,opt,name=Kind,proto3,enum=proto.LabelKind" json:"Kind,omitempty"`
	Level                LabelLevel `protobuf:"varint,3,opt,name=Level,proto3,enum=proto.LabelLevel" json:"Level,omitempty"`
	Labels               []string   `protobuf:"bytes,4,rep,name=Labels,proto3" json:"Labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Labels) Reset()         { *m = Labels{} }
func (m *Labels) String() string { return proto.CompactTextString(m) }
func (*Labels) ProtoMessage()    {}
func (*Labels) Descriptor() ([]byte, []int) {
	return fileDescriptor_6100d2b5ae808f16, []int{0}
}

func (m *Labels) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Labels.Unmarshal(m, b)
}
func (m *Labels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Labels.Marshal(b, m, deterministic)
}
func (m *Labels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Labels.Merge(m, src)
}
func (m *Labels) XXX_Size() int {
	return xxx_messageInfo_Labels.Size(m)
}
func (m *Labels) XXX_DiscardUnknown() {
	xxx_messageInfo_Labels.DiscardUnknown(m)
}

var xxx_messageInfo_Labels proto.InternalMessageInfo

func (m *Labels) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Labels) GetKind() LabelKind {
	if m != nil {
		return m.Kind
	}
	return LabelKind_OWN
}

func (m *Labels) GetLevel() LabelLevel {
	if m != nil {
		return m.Level
	}
	return LabelLevel_USER
}

func (m *Labels) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterEnum("proto.LabelKind", LabelKind_name, LabelKind_value)
	proto.RegisterEnum("proto.LabelLevel", LabelLevel_name, LabelLevel_value)
	proto.RegisterType((*Labels)(nil), "proto.Labels")
}

func init() { proto.RegisterFile("label.proto", fileDescriptor_6100d2b5ae808f16) }

var fileDescriptor_6100d2b5ae808f16 = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x49, 0x4c, 0x4a,
	0xcd, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xf5, 0x5c, 0x6c, 0x3e,
	0x20, 0xd1, 0x62, 0x21, 0x3e, 0x2e, 0x26, 0x4f, 0x17, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20,
	0x26, 0x4f, 0x17, 0x21, 0x15, 0x2e, 0x16, 0xef, 0xcc, 0xbc, 0x14, 0x09, 0x26, 0x05, 0x46, 0x0d,
	0x3e, 0x23, 0x01, 0x88, 0x36, 0x3d, 0xb0, 0x62, 0x90, 0x78, 0x10, 0x58, 0x56, 0x48, 0x9d, 0x8b,
	0xd5, 0x27, 0xb5, 0x2c, 0x35, 0x47, 0x82, 0x19, 0xac, 0x4c, 0x10, 0x59, 0x19, 0x58, 0x22, 0x08,
	0x22, 0x2f, 0x24, 0x06, 0xb3, 0x48, 0x82, 0x45, 0x81, 0x59, 0x83, 0x33, 0x08, 0xca, 0xd3, 0x52,
	0xe0, 0xe2, 0x84, 0x9b, 0x29, 0xc4, 0xce, 0xc5, 0xec, 0x1f, 0xee, 0x27, 0xc0, 0x20, 0xc4, 0xc5,
	0xc5, 0xe6, 0x1f, 0xe2, 0xe1, 0x1a, 0x14, 0x2c, 0xc0, 0xa8, 0xa5, 0xc0, 0xc5, 0x85, 0x30, 0x4e,
	0x88, 0x83, 0x8b, 0x25, 0x34, 0xd8, 0x35, 0x48, 0x80, 0x01, 0xc4, 0x0a, 0x71, 0x75, 0xf4, 0x15,
	0x60, 0x4c, 0x62, 0x03, 0x5b, 0x6a, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xea, 0x91, 0x34,
	0xe1, 0x00, 0x00, 0x00,
}
